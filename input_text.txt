Операторы
Набор операторов достаточно традиционен.

Условный оператор if (если). Альтернативный блок после else (иначе). Если условий и альтернатив несколько,
можно использовать elif (сокр. от else if).
Операторы цикла while (пока) и for (для). Внутри цикла возможно применение break и continue для прерывания
цикла и перехода сразу к следующей итерации, соответственно.
Оператор определения класса class.
Оператор определения функции, метода или генератора def. Внутри возможно применение return (возврат) для
возврата из функции или метода, а в случае генератора — yield (давать).
Оператор обработки исключений try — except — else или try — finally (начиная с версии 2.5, можно использовать
finally, except и else в одном блоке).
Оператор pass ничего не делает. Используется для пустых блоков кода.
Одной из интересных синтаксических особенностей языка является выделение блоков кода с помощью отступов
(пробелов или табуляций), поэтому в Python отсутствуют операторные скобки begin/end, как в языке Паскаль,
или фигурные скобки, как в Си. Такой «трюк» позволяет сократить количество строк и символов в программе и
приучает к «хорошему» стилю программирования. С другой стороны, поведение и даже корректность программы может
зависеть от начальных пробелов в тексте. Некоторым[кому?] такое поведение может показаться не интуитивным и неудобным.

